version: '3.8'

# ====================================== AIRFLOW COMMON ========================================

x-airflow-common: &airflow-common
  image: &airflow_image apache/airflow:2.2.2-python3.8
  environment: &airflow-common-env
    AIRFLOW__API__AUTH_BACKEND: airflow.api.auth.backend.basic_auth
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__CORE__LOAD_DEFAULT_CONNECTIONS: 'false'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql://airflow:airflow@postgres:5432/airflow
    AIRFLOW__CORE__STORE_DAG_CODE: 'true'
    AIRFLOW__CORE__STORE_SERIALIZED_DAGS: 'true'
    AIRFLOW__CORE__FERNET_KEY: EomypBljHcoY3zkxIznIgc5RNdnCjDB9WuHcLziXgu8=
    AIRFLOW__WEBSERVER__EXPOSE_CONFIG: 'true'
#    AIRFLOW__WEBSERVER__WEB_SERVER_SSL_CERT: /opt/airflow/certs/certificate.pem
#    AIRFLOW__WEBSERVER__WEB_SERVER_SSL_KEY: /opt/airflow/certs/privatekey.pem
  volumes:
    - ./dags:/opt/airflow/dags
    - logs:/opt/airflow/logs
  depends_on: &airflow-common-depends-on
    postgres:
      condition: service_healthy

x-vols-dags: &vols-dags
  "./dags:/opt/airflow/dags"

x-vols-logs: &vols-logs
  "logs:/opt/airflow/logs"

# ====================================== /AIRFLOW COMMON =======================================

services:
  postgres:
    image: postgres:14-alpine
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "airflow" ]
      interval: 5s
      retries: 5
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    ports:
      - "5432:5432"

  initdb:
    image: *airflow_image
    depends_on:
      *airflow-common-depends-on
    environment: *airflow-common-env
    entrypoint: /bin/bash
    command: -c 'airflow db init && airflow users create --username user --password password --firstname Marin --lastname Marin --role Admin --email admin@example.org'

  webserver:
    <<: *airflow-common
    image: *airflow_image
    command: webserver
    ports:
      - "8080:8080"
    healthcheck:
      test:  [ "CMD", "curl", "--fail", "http://localhost:8080/health" ]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always
    environment: *airflow-common-env
    volumes:
      - *vols-logs
    depends_on:
      <<: *airflow-common-depends-on
      initdb:
        condition: service_completed_successfully


  scheduler:
    <<: *airflow-common
    image: *airflow_image
    command: scheduler
    healthcheck:
      test: [ "CMD-SHELL", 'airflow jobs check --job-type SchedulerJob --hostname "$${HOSTNAME}"' ]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always
    environment: *airflow-common-env
    volumes:
      - *vols-dags
      - *vols-logs
    depends_on:
      <<: *airflow-common-depends-on
      initdb:
        condition: service_completed_successfully


  # the taxi data endpoint
  taxi_db:
    build:
      context: ./services/taxi_db
    ports:
      - "5433:5432"

  taxi_fileserver:
    build:
      context: ./services/taxi_fileserver
    environment:
      - POSTGRES_HOST=taxi_db
      - POSTGRES_PORT=5433
      - POSTGRES_USERNAME=taxi
      - POSTGRES_PASSWORD=ridetlc
      - POSTGRES_DATABASE=tlctriprecords
    depends_on:
      - taxi_db
    ports:
      - "8081:80"

  # the city bike data endpoint

  citibike_db:
    build:
      context: services/citibike_db
    ports:
      - "5434:5432"

  citibike_api:
    build:
      context: services/citibike_api
    environment:
      - POSTGRES_HOST=citibike_db
      - POSTGRES_PORT=5434
      - POSTGRES_USERNAME=city
      - POSTGRES_PASSWORD=cycling
      - POSTGRES_DATABASE=citibike
      - DATA_YEAR=2020
    depends_on:
        - citibike_db
    ports:
      - "8082:5010"

volumes:
  logs:
